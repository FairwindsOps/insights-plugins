package fairwinds
# Note that this policy will not function without updating the OPA plugin
# target-resource configuration to include Service resources`.
#
# Set the `checkLoadbalancer`, `allowedLBStatusIPs`, and `allowedServiceExternalIPs` variables below.

loadbalancerVulnerable[actionItem] {
    # Whether to enable this rule,
    # which requires particular IP addresses to be assigned to a loadbalancer.
    checkLoadbalancer := false
    # Define IP addresses allowed to be listed in a loadbalancer-service
    # status.loadBalancer.ingress field.
    # An action item will be created if IPs are used outside of this list.
    allowedLBStatusIPs := []

    checkLoadbalancer == true
    input.kind == "Service"
    allowedIPs := {ip | ip := allowedLBStatusIPs[_]}
    externalIPs := {obj.ip | obj := input.status.loadBalancer.ingress[_]}
    forbiddenIPs := externalIPs - allowedIPs
    count(forbiddenIPs) > 0
    actionItem := {
        "title": "Forbidden Loadbalancer External IP used",
        "description": sprintf("loadbalancer service has forbidden assigned IPs: %v", [forbiddenIPs]),
        "severity": 0.9,
        "remediation": "Review the External IPs used and either add this IP to the allowedLBStatusIPs policy variable, or troubleshoot the Kubernetes loadbalancer provisioner",
        "category": "Security"
    }
}

# Based on https://github.com/open-policy-agent/gatekeeper-library/blob/master/library/general/externalip/template.yaml
vulnerable[actionItem] {
    # Define IP addresses allowed to be listed in a service spec.externalIPs field.
    # An action item will be created if IPs are used outside of this list.
    allowedServiceExternalIPs := []

    input.kind == "Service"
    allowedIPs := {ip | ip := allowedServiceExternalIPs[_]}
    externalIPs := {ip | ip := input.spec.externalIPs[_]}
    forbiddenIPs := externalIPs - allowedIPs
    count(forbiddenIPs) > 0
    actionItem := {
        "title": "Forbidden External IP used",
        "description": sprintf("service has forbidden external IPs: %v", [forbiddenIPs]),
        "severity": 0.9,
        "remediation": "Review the External IPs used and either add this IP to the allowedServiceExternalIPs policy variable, or remove the External IP from the service",
        "category": "Security"
    }
}
