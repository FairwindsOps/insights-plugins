package fairwinds

loadbalancerVulnerable[actionItem] {
  input.parameters.checkLoadbalancer
  allowedIPs := {ip | ip := input.parameters.allowedIPs[_]}
  externalIPs := {obj.ip | obj := input.status.loadBalancer.ingress[_]}
  forbiddenIPs := externalIPs - allowedIPs
  count(forbiddenIPs) > 0
  actionItem := {
    "title": "Forbidden External IP used",
    "description": sprintf("service has forbidden external IPs: %v", [forbiddenIPs]),
    "severity": 0.9,
    "remediation": "Review the External IPs used and either add to the allowedIPs parameter or remove the External IP",
    "category": "Security"
  }
}

# Based on https://github.com/open-policy-agent/gatekeeper-library/blob/master/library/general/externalip/template.yaml
vulnerable[actionItem] {
  allowedIPs := {ip | ip := input.parameters.allowedIPs[_]}
  externalIPs := {ip | ip := input.spec.externalIPs[_]}
  forbiddenIPs := externalIPs - allowedIPs
  count(forbiddenIPs) > 0
  actionItem := {
    "title": "Forbidden External IP used",
    "description": sprintf("service has forbidden external IPs: %v", [forbiddenIPs]),
    "severity": 0.9,
    "remediation": "Review the External IPs used and either add to the allowedIPs parameter or remove the External IP",
    "category": "Security"
  }
}
