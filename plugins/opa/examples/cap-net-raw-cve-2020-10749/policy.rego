package fairwinds

baseActionItem := {
  "title": "Capability NET_RAW found",
  "description": "This pod could be susceptible to CVE-2020-14386",
  "severity": 0.9,
  "remediation": "Remove the NET_RAW capability",
  "category": "Security"
}

dropsNetRaw(pod) {
  keys := {"containers", "initContainers"}
  containers := [c | keys[k]; c = pod.spec[k][_]]
  container = containers[_]
  caps := {"NET_RAW", "ALL"}
  cap := caps[_]
  container.securityContext.capabilities.drop[_] == cap
}

blockedNamespace(elem) {
  ns := elem.parameters.blocklist[_]
  elem.metadata.namespace == ns
}

checkCronjob[actionItem] {
  not blockedNamespace(input)
  input.kind == "CronJob"
  pod := input.spec.jobTemplate.spec.template
  not dropsNetRaw(pod)
  actionItem := baseActionItem
}

checkPod[actionItem] {
  not blockedNamespace(input)
  input.kind == "Pod"
  not dropsNetRaw(input)
  actionItem := baseActionItem
}

checkDeploymentLike[actionItem] {
  not blockedNamespace(input)
  kinds := {"Deployment", "DaemonSet", "StatefulSet", "ReplicaSet", "Job"}
  kind := kinds[_]
  input.kind == kind
  pod := input.spec.template
  not dropsNetRaw(pod)
  actionItem := baseActionItem
}
