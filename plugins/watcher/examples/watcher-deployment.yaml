apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-watcher
  namespace: default
  labels:
    app: kubernetes-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetes-watcher
  template:
    metadata:
      labels:
        app: kubernetes-watcher
    spec:
      serviceAccountName: kubernetes-watcher
      containers:
      - name: watcher
        image: watcher:latest
        args:
        - --log-level=info
        volumeMounts:
        - name: output-volume
          mountPath: /output
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: output-volume
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-watcher
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-watcher
rules:
# Core resources
- apiGroups: [""]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Apps resources
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# RBAC resources
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Network resources
- apiGroups: ["networking.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Storage resources
- apiGroups: ["storage.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Kyverno resources
- apiGroups: ["wgpolicyk8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
# Admission control resources
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-watcher
subjects:
- kind: ServiceAccount
  name: kubernetes-watcher
  namespace: default
