apiVersion: apps/v1
kind: Deployment
metadata:
  name: insights-event-watcher
  namespace: insights-agent
  labels:
    app: insights-event-watcher
    component: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: insights-event-watcher
      component: webhook
  template:
    metadata:
      labels:
        app: insights-event-watcher
        component: webhook
    spec:
      serviceAccountName: insights-event-watcher
      containers:
      - name: insights-event-watcher
        image: insights-event-watcher:v2
        imagePullPolicy: Never
        ports:
        - containerPort: 8443
          name: webhook
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        command: ["/usr/local/bin/insights-event-watcher"]
        args:
        - --enable-vap-interceptor=true
        - --vap-interceptor-port=8443
        - --log-level=debug
        volumeMounts:
        - name: webhook-certs
          mountPath: /opt/cert
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: webhook-certs
        secret:
          secretName: insights-event-watcher-webhook-tls
---
apiVersion: v1
kind: Service
metadata:
  name: insights-agent-insights-event-watcher
  namespace: insights-agent
  labels:
    app: insights-event-watcher
    component: webhook
spec:
  ports:
  - port: 443
    targetPort: 8443
    protocol: TCP
    name: webhook
  selector:
    app: insights-event-watcher
    component: webhook
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: insights-event-watcher
  namespace: insights-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: insights-event-watcher
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionpolicies", "validatingadmissionpolicybindings"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: insights-event-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: insights-event-watcher
subjects:
- kind: ServiceAccount
  name: insights-event-watcher
  namespace: insights-agent
