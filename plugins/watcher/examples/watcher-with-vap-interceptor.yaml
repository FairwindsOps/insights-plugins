apiVersion: apps/v1
kind: Deployment
metadata:
  name: insights-event-watcher
  namespace: insights-agent
  labels:
    app: insights-event-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: insights-event-watcher
  template:
    metadata:
      labels:
        app: insights-event-watcher
    spec:
      serviceAccountName: insights-event-watcher
      containers:
      - name: insights-event-watcher
        image: insights-event-watcher:latest
        command: ["./insights-event-watcher"]
        args:
        - "--log-level=info"
        - "--enable-vap-interceptor=true"
        - "--vap-interceptor-port=8080"
        - "--insights-host=your-insights-host.com"
        - "--organization=your-org"
        - "--cluster=your-cluster"
        - "--insights-token=your-token"
        ports:
        - containerPort: 8080
          name: webhook
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: certs
          mountPath: /certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: vap-interceptor-certs
      restartPolicy: Always

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: insights-event-watcher
  namespace: insights-agent

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: insights-event-watcher
rules:
# Permissions for event watching
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["wgpolicyk8s.io"]
  resources: ["policyreports", "clusterpolicyreports"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["kyverno.io"]
  resources: ["policies", "clusterpolicies"]
  verbs: ["get", "list", "watch"]
# Permissions for VAP interceptor
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionpolicies", "validatingadmissionpolicybindings"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: insights-event-watcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: insights-event-watcher
subjects:
- kind: ServiceAccount
  name: insights-event-watcher
  namespace: insights-agent

---
apiVersion: v1
kind: Service
metadata:
  name: insights-event-watcher
  namespace: insights-agent
  labels:
    app: insights-event-watcher
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: webhook
  selector:
    app: insights-event-watcher

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: vap-interceptor-webhook
webhooks:
- name: vap-interceptor.fairwinds.com
  clientConfig:
    service:
      name: insights-event-watcher
      namespace: insights-agent
      path: "/validate"
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["*"]
    resources: ["*"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Ignore  # Don't block, just generate events
