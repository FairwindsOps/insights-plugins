version: 2.1

orbs:
  slack: circleci/slack@4.8
  rok8s-scripts: fairwinds/rok8s-scripts@11.11.5

commands:
  install_alpine_dependencies:
    description: Installs dependencies for CI scripts
    steps:
    - run: apk update
    - run: apk add gettext
  set_environment_variables:
    description: Sets environment variables for this job.
    steps:
    - run: ./.circleci/scripts/env.sh

  set_tags:
    description: Figures out which plugins have been changed etc
    steps:
    - run: ./.circleci/set_tags.sh

  install_goreleaser:
    description: Installs goreleaser
    steps:
    - run: curl -L https://github.com/goreleaser/goreleaser/releases/download/v1.10.3/goreleaser_Linux_x86_64.tar.gz > goreleaser.tar.gz
    - run: tar -xvf goreleaser.tar.gz goreleaser
    - run: mv ./goreleaser /usr/local/bin/goreleaser
    - run: rm goreleaser.tar.gz

  goreleaser:
    description: Build binaries and build/push docker Images depending on the git branch
    steps:
    - checkout
    - setup_remote_docker:
        version: 20.10.11
        # Docker Layer Caching saves /var/lib/docker in a persistent volume,
        # for Dockerfiles that use `RUN --mount=type=cache. . .`
        #docker_layer_caching: true
    - install_alpine_dependencies
    - set_environment_variables
    - set_tags
    - run:
        name: Build Plugin Docker Images
        command: |
          docker login quay.io -u="${fairwinds_quay_user}" -p="${fairwinds_quay_token}"
          for plugin in "${CHANGED[@]}"; do
            cd ./plugins/$plugin
            ../../scripts/goreleaser.sh
            cd ../..
          done

  check_version_changed:
    description: Check that version.txt changed if folder changed
    steps:
    - run:
        name: Check version.txt
        command: |
          if [ "$CIRCLE_BRANCH" == "main" ]
          then
            exit 0
          fi
          for plugin in "${CHANGED[@]}"; do
            if git diff --name-only --exit-code origin/main "./plugins/$plugin/version.txt" ; then
              echo "Please update ./plugins/$plugin/version.txt"
              exit 1
            elif ! grep -q "## $(cat ./plugins/$plugin/version.txt)" "./plugins/$plugin/CHANGELOG.md"; then
              echo "Please update ./plugins/$plugin/CHANGELOG.md"
              exit 1
            else
              echo "Update to ./plugins/$plugin/version.txt found"
            fi
          done

executors:
  ci-images:
    docker:
      - image: quay.io/reactiveops/ci-images:v11-stretch
  goreleaser:
    #resource_class: large
    docker:
      - image: goreleaser/goreleaser:v1.10.3


jobs:
  build_and_push_plugins:
    executor: goreleaser
    steps:
      - goreleaser
      - slack/notify:
          event: fail
          branch_pattern: main
          template: basic_fail_1

  test:
    docker:
      - image: cimg/go:1.18
    steps:
      - checkout
      - set_environment_variables
      - set_tags
      - run: go install golang.org/x/lint/golint@latest
      - run: |
          for plugin in "${GO_PKGS[@]}"; do
            echo "linting $plugin"
            cd plugins/$plugin
            # TODO: fix lint errors
            # go list ./... | xargs golint -set_exit_status
            cd ../..
          done
      - run: cd plugins/opa ; go test ./... ; cd ../..
      - run: cd plugins/admission ; go test ./... ; cd ../..
      - run: cd plugins/ci ; go test ./... ; cd ../..
      - run: cd plugins/trivy ; go test ./... ; cd ../..
      - slack/notify:
          event: fail
          branch_pattern: main
          template: basic_fail_1

  check_version_changed:
    docker:
      - image: cimg/go:1.18
    steps:
      - checkout
      - set_environment_variables
      - set_tags
      - check_version_changed

  scan_for_vulnerabilities:
    working_directory: /go/src/github.com/fairwindsops/insights-plugins/
    executor: ci-images
    steps:
      - checkout
      - set_environment_variables
      - setup_remote_docker
      - run: ./.circleci/scripts/install-trivy.sh
      - run: ./scripts/scan-all.sh
      - slack/notify:
          event: fail
          custom: |
            {
                "text": "One or more images in insights-plugins have vulnerabilities",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "One or more images in insights-plugins have vulnerabilities!\n\n$VULNERABLE_IMAGES_LIST"
                        }
                    }
                ]
            }
      - slack/notify:
          event: pass
          custom: |
            {
                "text": "All images in insights-plugins are clean",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": ":tada: All images in insights-plugins are clean!"
                        }
                    }
                ]
            }

  validate_modified_opa_policies:
    working_directory: /go/src/github.com/fairwindsops/insights-plugins/
    executor: ci-images
    steps:
      - checkout
      - set_environment_variables
      - setup_remote_docker
      - run: ./.circleci/scripts/install-insights-cli.sh
      - run: ./scripts/validate-modified-opa-policies.sh
      - slack/notify:
          event: fail
          custom: |
            {
                "text": "One or more modified OPA policies in insights-plugins has failed validation",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "One or more modified OPA policies in insights-plugins has failed validation!\n\n$FAILED_OPA_POLICIES_MARKDOWN"
                        }
                    }
                ]
            }
      - slack/notify:
          event: pass
          custom: |
            {
                "text": "All modified OPA policies in insights-plugins have passed validation",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": ":tada: All modified OPA policies in insights-plugins have passed validation!"
                        }
                    }
                ]
            }

workflows:
  version: 2
  release:
    jobs:
      - test
      - check_version_changed
      - validate_modified_opa_policies:
          name: Validate Modified OPA Policies
          requires:
            - test
            - check_version_changed
      - build_and_push_plugins:
          context: org-global
          requires:
            - check_version_changed
          filters:
            branches:
              ignore:
              - /pull\/[0-9]+/
      - rok8s-scripts/kubernetes_e2e_tests:
          name: End-To-End Test on Kubernetes
          requires:
            - build_and_push_plugins
          pre_script: e2e/pre.sh
          script: e2e/ci.sh
          store-artifacts: /workspace/output
      - scan_for_vulnerabilities:
          requires:
            - build_and_push_plugins
          filters:
            branches:
              only: main
  check_vulnerabilities:
    jobs:
      - scan_for_vulnerabilities
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - main
